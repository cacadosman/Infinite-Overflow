<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cyber Security on Infinite Overflow</title>
    <link>https://cacadosman.web.id/categories/cyber-security/</link>
    <description>Recent content in Cyber Security on Infinite Overflow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>cacadosman</copyright>
    <lastBuildDate>Sun, 10 Feb 2019 02:46:54 +0000</lastBuildDate>
    
	<atom:link href="https://cacadosman.web.id/categories/cyber-security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writeup CTF Brainduck Final Arkavidia 5.0</title>
      <link>https://cacadosman.web.id/2019/02/10/writeup-ctf-brainduck-final-arkavidia-5-0/</link>
      <pubDate>Sun, 10 Feb 2019 02:46:54 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2019/02/10/writeup-ctf-brainduck-final-arkavidia-5-0/</guid>
      <description>Terdapat sebuah web yang memiliki fitur untuk menginterpretasikan esolang brainfuck.
Jadi kira hanya perlu mengupload file yang berisikan bahasa brainfuck untuk diinterpretasikan dan juga dapat mendownload file yang telah kita upload.
Saat kita lakukan inspect element/view source terdapat hint ?debug=V untuk dapat melihat source code php nya. Lalu kita akan mendapat source seperti berikut:
&amp;lt;?php if (isset($_GET[&amp;quot;debug&amp;quot;])) { highlight_file(__FILE__); die(); } function processUpload() { if (!is_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;])) { throw new Exception(&#39;Bukan file terupload&#39;); } if ($_FILES[&#39;file&#39;][&#39;size&#39;] &amp;gt; 500) { throw new Exception(&#39;Ukuran file tidak boleh melebihi 500 bytes&#39;); } // harusnya cuma boleh &amp;gt;&amp;lt;+-[].</description>
    </item>
    
    <item>
      <title>Writeup Gemastik 11 - Troll</title>
      <link>https://cacadosman.web.id/2018/10/04/writeup-gemastik-11-troll/</link>
      <pubDate>Thu, 04 Oct 2018 07:12:19 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/10/04/writeup-gemastik-11-troll/</guid>
      <description>Terdapat sebuah service yang memiliki source code berikut:
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;f&amp;quot; id=&amp;quot;f&amp;quot; &amp;gt;&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Check&amp;quot; onclick=&amp;quot;ck()&amp;quot;&amp;gt; &amp;lt;script&amp;gt; ll = &amp;quot;length&amp;quot;; ca = &amp;quot;charCodeAt&amp;quot; function k(c) { return (c==&#39;O&#39;||c==&#39;0&#39;); } function n(){ for (; !k(a[i])&amp;amp;&amp;amp; i&amp;lt;a[ll]; i++); } function ck(){ a = troll.innerHTML; bb = {} for(i =0; i &amp;lt; 127; i++) { s = &amp;quot;&amp;quot;; for (j = 6; j &amp;gt;=0 ; j--) { s += (i &amp;amp; (1&amp;lt;&amp;lt;j))?</description>
    </item>
    
    <item>
      <title>Writeup Gemastik 11 - Aplikasi Web (?)</title>
      <link>https://cacadosman.web.id/2018/10/04/writeup-gemastik-11-aplikasi-web/</link>
      <pubDate>Thu, 04 Oct 2018 06:37:23 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/10/04/writeup-gemastik-11-aplikasi-web/</guid>
      <description>Terdapat sebuah service yang memiliki source code seperti berikut:
Simpelnya, kita perlu membayar minimal amount 20000 untuk mendapatkan sebuah flag. Akan tetapi tidak semudah itu karena pada proses check, kita hanya diperbolehkan memasukkan amount max 10000. Walaupun dilakukan inspect element, itu percuma saja karena disini dilakukan pengecekan hash untuk memastikan integritas data dari form sebelumnya itu isinya sama dengan form yang akan disubmit.
Menariknya, kode diatas terdapat sebuah celah keamanan yang sangat fatal.</description>
    </item>
    
    <item>
      <title>Writeup SlashRoot CTF - Header Inspector 200</title>
      <link>https://cacadosman.web.id/2018/07/31/writeup-slashroot-ctf-header-inspector-200/</link>
      <pubDate>Tue, 31 Jul 2018 10:12:31 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/31/writeup-slashroot-ctf-header-inspector-200/</guid>
      <description>Pada soal, diberikan sebuah url web
http://103.200.7.156:7080/
Saat kita buka url tsb, ternyata kita dapat mengecek header dari suatu url, misal google
Pastinya Remote Code Execution, karena biasanya soal tipe seperti ini menggunakan curl. Sayangnya filter lumayan kerad, (; &amp;amp;&amp;amp; | ternyata dibanned :”).
Oke, untungnya $() tidak dibanned.
Kita akan membypassnya menggunakan command curl yang dibungkus dengan $() dan mengoper responsenya ke HTTP Request Inspector
http://reqbin.cacadosman.web.id/v0b9bnv0?inspect
Kita eksekusi dengan memasukkan payload berikut</description>
    </item>
    
    <item>
      <title>Cara Mencegah SQL Injection</title>
      <link>https://cacadosman.web.id/2018/07/25/cara-mencegah-sql-injection/</link>
      <pubDate>Wed, 25 Jul 2018 16:55:46 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/25/cara-mencegah-sql-injection/</guid>
      <description>Walaupun SQL Injection tergolong vuln yang sudah sangat tua, namun masih saja banyak programmer yang belum mengetahui bahaya dari SQL Injection. Sehingga banyak sekali website yang mudah terkena deface. Kali ini saya ingin memberikan cara mudah untuk mencegah SQL Injection dengan menggunakan prepared statement.
Untuk kali ini, contoh kasusnya kita menggunakan bahasa pemrograman PHP. Karena bahasa tersebut merupakan salah satu bahasa yang paling banyak penggunanya.
PDO:
$conn = new PDO(&amp;quot;mysql:host=$db_servername;dbname=$dbname&amp;quot;, $db_username, $db_password); $stmt = $conn-&amp;gt;prepare(&amp;quot;SELECT * FROM posts WHERE id=:id&amp;quot;); $stmt-&amp;gt;bindParam(&amp;quot;:id&amp;quot;, $post_id); $stmt-&amp;gt;execute(); $posts = $stmt-&amp;gt;fetchAll();  Mysqli:</description>
    </item>
    
    <item>
      <title>WriteUp SQLi BTP - Lorem Ipsum (300)</title>
      <link>https://cacadosman.web.id/2018/07/24/writeup-sqli-btp-lorem-ipsum-300/</link>
      <pubDate>Tue, 24 Jul 2018 14:30:19 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/24/writeup-sqli-btp-lorem-ipsum-300/</guid>
      <description>Terdapat sebuah web yang sekilas terlihat biasa saja, namun saat kita memcoba mengakses hyperlink, ternyata menggunakan ajax. Sampai disini kita curiga bahwa terdapat vuln SQLi pada url api yang menggunakan ajax, sehingga dengan menggunakan HTTP Trace kita dapat mengetahui url api nya.
Yaitu pada **data.php **dan kita bisa memasukkan inputan pada parameter id dengan metode post, namun inputan harus dalam bentuk base64. Lalu kita coba kirimkan sebuah payload ke url tsb:</description>
    </item>
    
    <item>
      <title>Web Security Basic - Local File Inclusion</title>
      <link>https://cacadosman.web.id/2018/07/21/web-security-basic-local-file-inclusion/</link>
      <pubDate>Sat, 21 Jul 2018 08:21:07 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/21/web-security-basic-local-file-inclusion/</guid>
      <description>Apa itu LFI?
Local File Inclusion memungkinkan kita untuk melakukan inklusi/include sebuah file (Mengeksekusi/membaca file lain yang berada pada server yang seharusnya tidak boleh kita eksekusi diluar prosedur)
Apa itu include?
http://php.net/manual/en/function.include.php
Latihan:
Mari kita buka url berikut ini
http://ctf.asgama.tk:40004/
Terdapat menu home dan kontak, serta terdapat sebuah source code.
Mari kita buka source code tsb.
Nothing to do here
    Dari kode diatas, kita bisa mengetahui bahwa web tsb melakukan inklusi/include dengan parameter $_GET[“page”], bisa kita ketahui saat kita membuka menu kontak.</description>
    </item>
    
    <item>
      <title>Web Security Basic - Remote Code Execution</title>
      <link>https://cacadosman.web.id/2018/07/21/web-security-basic-remote-code-execution/</link>
      <pubDate>Sat, 21 Jul 2018 08:15:00 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/21/web-security-basic-remote-code-execution/</guid>
      <description>Requirements:
 * Basic Linux * PHP * Pantang Menyerah :3  Apa itu RCE ?
https://searchwindowsserver.techtarget.com/definition/remote-code-execution-RCE
RCE memungkinkan kita untuk mendapatkan kendali terhadap resource yang terdapat pada server si korban (Mengkontrol device korban) dengan melakukan injeksi perintah pada sistem operasi (mengeksekusi cmd/bash).
Latihan:
Buka url berikut
http://ctf.asgama.tk:40003/
Kita akan melihat sebuah form
Terdapat hint berupa source code, mari kita lihat /sauce.txt
    Jika kita perhatikan kode diatas, maka kita akan menampilkan nama yang kita input pada form dengan fungsi passthru (http://php.</description>
    </item>
    
    <item>
      <title>Web Security Basic - Cross Site Scripting</title>
      <link>https://cacadosman.web.id/2018/07/21/web-security-basic-cross-site-scripting/</link>
      <pubDate>Sat, 21 Jul 2018 08:09:25 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/21/web-security-basic-cross-site-scripting/</guid>
      <description>Apa itu Cross Site Scripting (XSS) ?
https://www.owasp.org/index.php/Cross-siteScripting(XSS)
Requirements:
 * Dasar PHP * Dasar Javascript * Many Try, Much Error  Belajar JS :https://www.tutorialspoint.com/javascript/index.htm
Belajar PHP :https://www.tutorialspoint.com/php/index.htm
Vulnerability
XSS Merupakan salah satu vuln yang masih sering ditemukan pada aplikasi web. Tujuannya ialah mengirimkan sebuah request berupa payload (malicious code) ke server yang untuk kemudian payload tersebut akan ditampilkan kembali oleh server pada browser (client). Sehingga dalam kasus tersebut, target kita adalah pada client side (Tidak memengaruhi server).</description>
    </item>
    
    <item>
      <title>Web Security Basic - Kodingmu Harimaumu</title>
      <link>https://cacadosman.web.id/2018/07/21/web-security-basic-kodingmu-harimaumu/</link>
      <pubDate>Sat, 21 Jul 2018 08:03:55 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/21/web-security-basic-kodingmu-harimaumu/</guid>
      <description>Jangan sepelekan koding, mungkin iya project kita bisa selesai. Namun belum tentu apa yang kita koding itu aman, kadang masih meninggalkan celah keamanan.
Biasanya celah keamanan ditemukan pada input yang tidak difilter maupun kesalahan penggunaan fungsi bawaan yang deprecated, jadi kita bisa dengan mudah melakukan injeksi pada form input.
Salah satu poin penting disini ialah Jangan Percaya Inputan User.
Contoh Soal:
Berikut adalah contoh soal dengan celah keamanan pada fungsi bawaan php yaitu strcmp yang berfungsi untuk membandingkan nilai.</description>
    </item>
    
    <item>
      <title>Web Security Basic - Bahasa Pemrograman</title>
      <link>https://cacadosman.web.id/2018/07/21/web-security-basic-bahasa-pemrograman/</link>
      <pubDate>Sat, 21 Jul 2018 02:18:21 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/21/web-security-basic-bahasa-pemrograman/</guid>
      <description>Semua aplikasi pastinya dibuat dengan menggunakan bahasa pemrograman, oleh karena itu agar kita dapat menemukan suatu celah keamanan dari aplikasi kita harus menguasai bahasa pemrograman terlebih dahulu untuk dapat menganalisa source code (baik source code utuh maupun dengan reverse engineering). Kebanyakan anak jaman now seringkali saya jumpai ingin menjadi hacker tapi secara instan dengan mengandalkan tools dan dorking, namun malas untuk mempelajari dasar bahasa pemrograman dan konsep dari eksploitasinya. Hal seperti itulah yang harus kita hindari, kita harus mempunyai pondasi yang mantap sebelum ke tahap selanjutnya.</description>
    </item>
    
    <item>
      <title>Web Security Basic - Pengenalan Website</title>
      <link>https://cacadosman.web.id/2018/07/20/web-security-basic-pengenalan-website/</link>
      <pubDate>Fri, 20 Jul 2018 17:05:41 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/20/web-security-basic-pengenalan-website/</guid>
      <description>Bagaimana cara kerja website?
Simpelnya ialah melakukan request dan response. {{$.Site.BaseURL}}
Kita analogikan client itu adalah kita, lalu kita melakukan sebuah HTTP Request ke server (Bagaikan kita meminta tolong kepada seseorang). Kemudian server memproses dan memberikan sebuah response kepada client (Bagaikan seseorang itu menerima permintaan tolong kita lalu memberikan respon untuk membantu).
HTTP Headers
HTTP Headers memungkinkan kita untuk memberikan informasi tambahan pada Request/Response. Intinya ialah informasi yang tersimpan pada request/response message.</description>
    </item>
    
    <item>
      <title>Web Security Basic - Source Code</title>
      <link>https://cacadosman.web.id/2018/07/20/web-security-basic-source-code/</link>
      <pubDate>Fri, 20 Jul 2018 16:49:48 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/20/web-security-basic-source-code/</guid>
      <description>Pertama yang harus kita lakukan adalah menganalisa atau mencari informasi.
Salah satu yang paling mudah ialah melihat source code dari halaman web.
Note: Source Code yang ditampilkan hanyalah bagian frontend, bukan bagian backend     Pada browser (Chrome/Firefox) kita hanya perlu menekan kombinasi tombol
ctrl + U Pada Keyboard untuk menampilkan source code.
Kadangkala sebuah halaman web tidak mengizinkan kita untuk melihat source code, solusi alternatifnya adalah membuka url tersebut di tab baru dgn tambahan prefix view-source: diawal url</description>
    </item>
    
    <item>
      <title>OLC Cyber Security 1 - Dasar Python dan Kripto</title>
      <link>https://cacadosman.web.id/2018/07/20/olc-cyber-security-1-dasar-python-dan-kripto-2/</link>
      <pubDate>Fri, 20 Jul 2018 16:38:22 +0000</pubDate>
      
      <guid>https://cacadosman.web.id/2018/07/20/olc-cyber-security-1-dasar-python-dan-kripto-2/</guid>
      <description>Materi : Dasar Python dan Kriptografi
Sebuah modul yang dibuat untuk semua pada umumnya dan peserta OmahTI Learning Center pada kususnya. Yah walaupun modulnya kurang menarik. Ditujukan untuk membagikan ilmu kepada sesama, karena pada hakikatnya ilmu itu perlu untuk dibagikan/sebarluaskan.
Requirements:
 Niat yang mantaap Dijalankan dengan sungguh-sungguh Mandiri, tidak selalu minta disuap Tidak disalahgunakan untuk kemudaratan  *Jika terdapat penyalahgunaan di kemudian hari, kami tidak bertanggungjawab atas apa yang anda lakukan.</description>
    </item>
    
  </channel>
</rss>