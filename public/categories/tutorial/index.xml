<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Infinite Overflow</title>
    <link>/categories/tutorial/</link>
    <description>Recent content in Tutorial on Infinite Overflow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>cacadosman</copyright>
    <lastBuildDate>Thu, 04 Oct 2018 07:12:19 +0000</lastBuildDate>
    
	<atom:link href="/categories/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writeup Gemastik 11 - Troll</title>
      <link>/writeup-gemastik-11-troll/</link>
      <pubDate>Thu, 04 Oct 2018 07:12:19 +0000</pubDate>
      
      <guid>/writeup-gemastik-11-troll/</guid>
      <description>Terdapat sebuah service yang memiliki source code berikut:
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;f&amp;#34; id=&amp;#34;f&amp;#34; &amp;gt;&amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Check&amp;#34; onclick=&amp;#34;ck()&amp;#34;&amp;gt; &amp;lt;script&amp;gt; ll = &amp;#34;length&amp;#34;; ca = &amp;#34;charCodeAt&amp;#34; function k(c) { return (c==&amp;#39;O&amp;#39;||c==&amp;#39;0&amp;#39;); } function n(){ for (; !k(a[i])&amp;amp;&amp;amp; i&amp;lt;a[ll]; i++); } function ck(){ a = troll.innerHTML; bb = {} for(i =0; i &amp;lt; 127; i++) { s = &amp;#34;&amp;#34;; for (j = 6; j &amp;gt;=0 ; j--) { s += (i &amp;amp; (1&amp;lt;&amp;lt;j))?</description>
    </item>
    
    <item>
      <title>Writeup Gemastik 11 - Aplikasi Web (?)</title>
      <link>/writeup-gemastik-11-aplikasi-web/</link>
      <pubDate>Thu, 04 Oct 2018 06:37:23 +0000</pubDate>
      
      <guid>/writeup-gemastik-11-aplikasi-web/</guid>
      <description>Terdapat sebuah service yang memiliki source code seperti berikut:
Simpelnya, kita perlu membayar minimal amount 20000 untuk mendapatkan sebuah flag. Akan tetapi tidak semudah itu karena pada proses check, kita hanya diperbolehkan memasukkan amount max 10000. Walaupun dilakukan inspect element, itu percuma saja karena disini dilakukan pengecekan hash untuk memastikan integritas data dari form sebelumnya itu isinya sama dengan form yang akan disubmit.
Menariknya, kode diatas terdapat sebuah celah keamanan yang sangat fatal.</description>
    </item>
    
    <item>
      <title>Writeup SlashRoot CTF - Header Inspector 200</title>
      <link>/writeup-slashroot-ctf-header-inspector-200/</link>
      <pubDate>Tue, 31 Jul 2018 10:12:31 +0000</pubDate>
      
      <guid>/writeup-slashroot-ctf-header-inspector-200/</guid>
      <description>Pada soal, diberikan sebuah url web
http://103.200.7.156:7080/
Saat kita buka url tsb, ternyata kita dapat mengecek header dari suatu url, misal google
Pastinya Remote Code Execution, karena biasanya soal tipe seperti ini menggunakan curl. Sayangnya filter lumayan kerad, (; &amp;amp;&amp;amp; | ternyata dibanned :‚Äù).
Oke, untungnya $() tidak dibanned.
Kita akan membypassnya menggunakan command curl yang dibungkus dengan $() dan mengoper responsenya ke HTTP Request Inspector
http://reqbin.cacadosman.web.id/v0b9bnv0?inspect
Kita eksekusi dengan memasukkan payload berikut</description>
    </item>
    
    <item>
      <title>Cara Mencegah SQL Injection</title>
      <link>/cara-mencegah-sql-injection/</link>
      <pubDate>Wed, 25 Jul 2018 16:55:46 +0000</pubDate>
      
      <guid>/cara-mencegah-sql-injection/</guid>
      <description>Walaupun SQL Injection tergolong vuln yang sudah sangat tua, namun masih saja banyak programmer yang belum mengetahui bahaya dari SQL Injection. Sehingga banyak sekali website yang mudah terkena deface. Kali ini saya ingin memberikan cara mudah untuk mencegah SQL Injection dengan menggunakan prepared statement.
Untuk kali ini, contoh kasusnya kita menggunakan bahasa pemrograman PHP. Karena bahasa tersebut merupakan salah satu bahasa yang paling banyak penggunanya.
PDO:
$conn = new PDO(&amp;#34;mysql:host=$db_servername;dbname=$dbname&amp;#34;, $db_username, $db_password); $stmt = $conn-&amp;gt;prepare(&amp;#34;SELECT * FROM posts WHERE id=:id&amp;#34;); $stmt-&amp;gt;bindParam(&amp;#34;:id&amp;#34;, $post_id); $stmt-&amp;gt;execute(); $posts = $stmt-&amp;gt;fetchAll(); Mysqli:</description>
    </item>
    
    <item>
      <title>WriteUp SQLi BTP - Lorem Ipsum (300)</title>
      <link>/writeup-sqli-btp-lorem-ipsum-300/</link>
      <pubDate>Tue, 24 Jul 2018 14:30:19 +0000</pubDate>
      
      <guid>/writeup-sqli-btp-lorem-ipsum-300/</guid>
      <description>Terdapat sebuah web yang sekilas terlihat biasa saja, namun saat kita memcoba mengakses hyperlink, ternyata menggunakan ajax. Sampai disini kita curiga bahwa terdapat vuln SQLi pada url api yang menggunakan ajax, sehingga dengan menggunakan HTTP Trace kita dapat mengetahui url api nya.
Yaitu pada **data.php **dan kita bisa memasukkan inputan pada parameter id dengan metode post, namun inputan harus dalam bentuk base64. Lalu kita coba kirimkan sebuah payload ke url tsb:</description>
    </item>
    
    <item>
      <title>Web Security Basic - Remote Code Execution</title>
      <link>/2018/07/21/web-security-basic-remote-code-execution/</link>
      <pubDate>Sat, 21 Jul 2018 08:15:00 +0000</pubDate>
      
      <guid>/2018/07/21/web-security-basic-remote-code-execution/</guid>
      <description>Requirements:
 * Basic Linux * PHP * Pantang Menyerah :3  Apa itu RCE ?
https://searchwindowsserver.techtarget.com/definition/remote-code-execution-RCE
RCE memungkinkan kita untuk mendapatkan kendali terhadap resource yang terdapat pada server si korban (Mengkontrol device korban) dengan melakukan injeksi perintah pada sistem operasi (mengeksekusi cmd/bash).
Latihan:
Buka url berikut
http://ctf.asgama.tk:40003/
Kita akan melihat sebuah form
Terdapat hint berupa source code, mari kita lihat /sauce.txt
&amp;lt;?php if(isset($_GET[&amp;quot;nama&amp;quot;])){ $nama = $_GET[&amp;quot;nama&amp;quot;]; passthru(&amp;quot;echo &amp;quot; . $nama .</description>
    </item>
    
    <item>
      <title>Web Security Basic - Cross Site Scripting</title>
      <link>/web-security-basic-cross-site-scripting/</link>
      <pubDate>Sat, 21 Jul 2018 08:09:25 +0000</pubDate>
      
      <guid>/web-security-basic-cross-site-scripting/</guid>
      <description>Apa itu Cross Site Scripting (XSS) ?
https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)
Requirements:
 * Dasar PHP * Dasar Javascript * Many Try, Much Error  Belajar JS :https://www.tutorialspoint.com/javascript/index.htm
Belajar PHP :https://www.tutorialspoint.com/php/index.htm
Vulnerability
XSS Merupakan salah satu vuln yang masih sering ditemukan pada aplikasi web. Tujuannya ialah menyisipkan sebuah payload (malicious code) yang dapat dieksekusi oleh browser (client). Sehingga dalam kasus tersebut, target kita adalah pada client side (Tidak memengaruhi server).
Macam-macam vuln XSS:</description>
    </item>
    
    <item>
      <title>OLC Cyber Security 1 - Dasar Python dan Kripto</title>
      <link>/olc-cyber-security-1-dasar-python-dan-kripto-2/</link>
      <pubDate>Fri, 20 Jul 2018 16:38:22 +0000</pubDate>
      
      <guid>/olc-cyber-security-1-dasar-python-dan-kripto-2/</guid>
      <description>Materi : Dasar Python dan Kriptografi
Sebuah modul yang dibuat untuk semua pada umumnya dan peserta OmahTI Learning Center pada kususnya. Yah walaupun modulnya kurang menarik. Ditujukan untuk membagikan ilmu kepada sesama, karena pada hakikatnya ilmu itu perlu untuk dibagikan/sebarluaskan.
Requirements:
 Niat yang mantaap Dijalankan dengan sungguh-sungguh Mandiri, tidak selalu minta disuap Tidak disalahgunakan untuk kemudaratan  *Jika terdapat penyalahgunaan di kemudian hari, kami tidak bertanggungjawab atas apa yang anda lakukan.</description>
    </item>
    
    <item>
      <title>Create Blog With Github Pages</title>
      <link>/olc-cyber-security-1-dasar-python-dan-kripto/</link>
      <pubDate>Fri, 20 Jul 2018 16:28:56 +0000</pubDate>
      
      <guid>/olc-cyber-security-1-dasar-python-dan-kripto/</guid>
      <description>Hi readers, i want to share some tutorials how to create a blog without spending any money :D
I know we don&#39;t like to spending our money to buy some shit like this hahaha, so this is the best solution for you that want to have a free blog. However, free doesn&#39;t mean easy to do :)
You need to have some coding skills to create something like this. But don&#39;t worry, i&#39;ll teach you how to do.</description>
    </item>
    
  </channel>
</rss>